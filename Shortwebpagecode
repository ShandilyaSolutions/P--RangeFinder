<!DOCTYPE html><html><head><title>ESP32 WebServer</title><style type="text/css">h2 { font-family: "Georgia", Times, serif; font-style: italic; font-weight: bolder; font-size: 25px; color: #f05513; text-shadow: 3px 3px 3px #ababab;}table { border: 1px; border-style: solid; border-collapse: collapse; width: 100%; background-color: azure;}tr { height: 80px; border: 1px; border-style: solid; vertical-align: middle; text-align: center;}td { border: 1px ; border-style: solid; height: 80px; text-align: left; vertical-align: middle;}h5 { margin-left: 25px; font-family: "Georgia", Times, serif; font-style: normal; font-size: medium; font-weight: normal; text-shadow: 3px 3px 3px #ababab;}p { color: black; font-size: 15px; font-family: "Georgia", Times, serif;}div { text-align: left;}h4 { font-family: Georgia, 'Times New Roman', Times, serif; font-size: 20px; font-style: italic; font-weight: lighter;}.sensorReadings { width: 70px; height: 30px; padding: 5px; position: relative; left: 230px; bottom: 60px; margin-right: 10px;}.dataTable { text-align: center;}</style></head><body><script type="text/javascript">var Socket; //holds the socket objectfunction init() { Socket = new WebSocket('ws://'+window.location.hostname+':81'); // Asks to connect to a web socket server with the IP address on 81 Socket.onmessage = function(event) { // onmessage event occures everytime new sensor data is received and we call the processCommand function processCommand(event); };}function processCommand(event) { //this function is used to parse the incoming JSON holding sensor data and puts it's value in their respective places var obj = JSON.parse(event.data); //inserting the data of accelerometer & gyroscope document.getElementById('Xa').innerHTML=obj.Xa; document.getElementById('Ya').innerHTML=obj.Ya; document.getElementById('Za').innerHTML=obj.Za; document.getElementById('Xr').innerHTML=obj.Xr; document.getElementById('Yr').innerHTML=obj.Yr; document.getElementById('Zr').innerHTML=obj.Zr; //displaying the variables console.log("Acceleration in X :",obj.Xa); console.log("Acceleration in Y :",obj.Ya); console.log("Acceleration in Z :",obj.Za); console.log("Rotation in X : ",obj.Xr); console.log("Rotation in Y : ",obj.Yr); console.log("Rotation in Z : ",obj.Zr); }window.onload = function(event){ init();}</script><h2 style="text-align:center">MPU6050 data</h2><table class="dataTable"><tr><td><h5 class="grid-item" style="text-align:left">Accelerometer in X-axis : </h5><input class="sensorReadings" type="hidden" id="Xa" name="Xa" autofocus readonly></input></td><td><h5 class="grid-item" style="text-align:left">Accelerometer in Y-axis : </h5><input class="sensorReadings" type="hidden" id="Ya" name="Ya" autofocus readonly></input></td><td><h5 class="grid-item" style="text-align:left">Accelerometer in Z-axis : </h5><input class="sensorReadings" type="hidden" id="Za" name="Za" autofocus readonly></input></td></tr><tr><td><h5 class="grid-item" style="text-align:left">Gyroscope in X-axis : </h5><input class="sensorReadings" type="hidden" id="Xr" name="Xr" autofocus readonly></input></td><td><h5 class="grid-item" style="text-align:left">Gyroscope in Y-axis : </h5><input class="sensorReadings" type="hidden" id="Yr" name="Yr" autofocus readonly></input></td><td><h5 class="grid-item" style="text-align:left">Gyroscope in Z-axis : </h5><input class="sensorReadings" type="hidden" id="Za" name="Zr" autofocus readonly></input></td></tr></table><div><!--<br> tag is used for printing new line on the screen for cleaner look--><br><br><h4><u>Percentage Error : </u></h4><p>Accelerometer X : </p><p>Accelerometer Y : </p><p>Accelerometer Z : </p><p>Gyroscope X : </p><p>Gyroscope Y : </p><p>Gyroscope Z : </p></div></body></html
